@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model List<PDFUploadWebApplication.Core.Entities.Document>

@{
    ViewBag.Title = "Upload Document";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg rounded-4">
                <div class="card-header text-center bg-primary text-white">
                    <h4>Upload Document</h4>
                </div>
                <div class="card-body">
                    <form id="uploadForm" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="file" class="form-label">Select a file:</label>
                            <input type="file" name="file" id="file" class="form-control" accept=".pdf,.doc,.docx" required />
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Upload</button>
                        </div>
                    </form>
                </div>
                <div class="card-footer text-center">
                    <small class="text-muted">Allowed formats: PDF, DOC, DOCX</small>
                </div>
            </div>
        </div>
    </div>
</div>

@if (ViewBag.Message != null)
{
    <div class="alert alert-info text-center mt-3">@ViewBag.Message</div>
}

<!-- 🔹 Uploaded Documents Grid -->
<div class="container mt-5">
    <h2 class="text-center">Your Uploaded Documents</h2>

    @if (!Model.Any())
    {
        <p class="text-center text-muted">No documents uploaded yet.</p>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>File Name</th>
                    <th>Upload Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var doc in Model)
                {
                    <tr>
                        <td>@doc.FileName</td>
                        <td>@doc.UploadedAt.ToString("dd MMM yyyy HH:mm")</td>
                        <td>
                            <a href="@Url.Action("GetFile", "Document", new { fileName = doc.FileName })" class="btn btn-success btn-sm">
                                <i class="bi bi-download"></i> Download
                            </a>
                           @*  <button class="btn btn-secondary btn-sm" onclick="viewPdf('@doc.FileName')">
                                <i class="bi bi-eye"></i> View
                            </button> *@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<!-- 🔹 PDF Preview Section -->
<div class="container mt-3">
    <h4 class="text-center">PDF Preview</h4>
    <iframe id="pdfViewer" width="100%" height="600px" style="border: none; display: none;"></iframe>
</div>

<script>
    document.getElementById("uploadForm").addEventListener("submit", async function(event) {
        event.preventDefault();

        const fileInput = document.getElementById("file").files[0];
        const jwtToken = localStorage.getItem("jwtToken");

        if (!jwtToken) {
            alert("User is not authenticated. Redirecting to login...");
            window.location.href = "/Auth/Login";
            return;
        }

        const formData = new FormData();
        formData.append("file", fileInput);

        try {
            const response = await fetch('/Document/UploadFile', {
                method: 'POST',
                headers: { "Authorization": `Bearer ${jwtToken}` },
                body: formData
            });

            if (response.ok) {
                alert("File uploaded successfully!");
                window.location.reload();
            } else {
                const errorText = await response.text();
                console.error("Upload failed:", errorText);
                alert(errorText);
            }
        } catch (error) {
            console.error("Error during file upload:", error);
            alert("A network error occurred. Please try again.");
        }
    });

    function viewPdf(fileName) {
        const pdfViewer = document.getElementById("pdfViewer");
        pdfViewer.src = `/Document/ViewFile?fileName=${fileName}`;
        pdfViewer.style.display = "block"; // Show the PDF preview
    }
</script>
